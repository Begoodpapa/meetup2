*Setting*							
Suite Setup	Select active UP and set test resource						
Suite Teardown	common_operation_resource.Disconnect From Target Hardware						
Force Tags	Product_Backlog_ID-B01178	CR#S1328	CR#S1326	CR#S1350	CR#S1290	EFS_ID-RNC_EFS_2222_312	EFS_ID-RNC_EFS_2222_325
...	EFS_ID-RNC_EFS_2222_326	EFS_ID-RNC_EFS_2222_327	EFS_ID-RNC_EFS_74_115	EFS_ID-RNC_EFS_74_121	EFS_ID-RNC_EFS_74_147	EFS_ID-RNC_EFS_1225_107	EFS_ID-RNC_EFS_1225_329
...	EFS_ID-RNC_EFS_74_146	EFS_ID-RNC_EFS_1225_119	EFS_ID-RNC_EFS_74_145	PRS_ID-IL_PRS_4039	PRS_ID-IL_PRS_4247	PRS_ID-IL_PRS_4246	PRS_ID-PRS_614
...	PRS_ID-PRS_3622	PRS_ID-PRS_3281	PRS_ID-PRS_3547	PRS_ID-PRS_3547	PRS_ID-PRS_3619	owner-I_EXT_NWS_WCDMA_RA_RI_HZSWD_LITE_FLASH@internal.nsn.com	element-il
...	exec_type-automatic	release-IL1	hw_env-RNC_S0	exec_level-pre	type-FUT	QL-6	HW_TYPE-BCN_A1
...	BCN_STEP-BCN_S0	Product_Backlog_ID-B01178	FRS_ID-PCM_100201_2_R2222	FRS_ID-PCM_100201_10_R1253			
Resource	il.html						
Library	Collections						
Library	../resources/cacprb_test_resources.py						
Resource	../resources/common_operation_resource.html						
Resource	../resources/cac_basic_operation_resource.html						
							
*Variable*							
${IPBR_WITH_COMMITTED_BW}	4020						
${IPBR_WITH_COMMITTED_BW_0}	4014						
${BIG_AVE_BW}	2000000						
${BIG_MAX_BW}	2000001						
${IPBR_ID_4095}	4095						
${NORMAL_MAX_BW}	3000						
${NORMAL_AVE_BW}	2000						
${NO_FREE_BANDWIDTH_EC}	0x450D						
${CREATE_LEG_WITH_NO_ENOUGH_BW}	NCAC=0,FABR=${BIG_AVE_BW},FMBR=${BIG_MAX_BW}						
${CREATE_LEG_WITHOUT_CAC}	NCAC=1						
${CREATE_LEG_WITH_COMMIT_BW_0}	NCAC=0,FABR=${NORMAL_AVE_BW},FMBR=${NORMAL_MAX_BW}						
${CREATE_LEG_WITH_CAC}	NCAC=0,FABR=${NORMAL_AVE_BW},FMBR=${NORMAL_MAX_BW}						
${DELTA_BW_0}	0						
${RES_TYPE}	OUT						
							
*Test Case*							
Validate CAC supports Iu-PS leg	[Setup]	create leg list					
	[Template]	Create and release Iu-PS leg					
	${CREATE_LEG_WITHOUT_CAC}	${RES_SUCCESS}	${IPBR_WITH_COMMITTED_BW}	${DELTA_BW_0}			
	${CREATE_LEG_WITH_NO_ENOUGH_BW}	${RES_FAILED}	${IPBR_WITH_COMMITTED_BW}	${DELTA_BW_0}	${NO_FREE_BANDWIDTH_EC}		
	${CREATE_LEG_WITH_CAC}	${RES_SUCCESS}	${IPBR_WITH_COMMITTED_BW}	${EXPECT_RESERVE_BW}			
	${CREATE_LEG_WITH_COMMIT_BW_0}	${RES_SUCCESS}	${IPBR_WITH_COMMITTED_BW_0}	${EXPECT_RESERVE_BW}			
	[Teardown]	Run Keyword If Test Failed	release legs created in test case				
							
*Keyword*							
Select active UP and set test resource	connect to target hardware						
	switch to active OMU						
	Get active USCP and CSCP						
	${increase_BW}	Evaluate	${NORMAL_MAX_BW}*0.2 + ${NORMAL_AVE_BW}*0.8				
	set Suite Variable	\${EXPECT_RESERVE_BW}	${increase_BW}				
							
Get active USCP and CSCP	${USCP_LIST}	${CSCP_LIST}	get_usable_recovery_groups				
	set Suite Variable	\${ACTIVE_USCP}	${USCP_LIST[0]}				
	set Suite Variable	\${ACTIVE_CSCP}	${CSCP_LIST[0][0]}				
							
Create and release Iu-PS leg	[Arguments]	${leg_para}	${expect_result}	${ipbr_id}	${expect_bw}	${error_code}=	
	${ipbr_orig_info}	get ipbr resource info	${ipbr_id}				
	${leg_info}	Create test Iu-PS leg	${ipbr_id}	${leg_para}			
	${ipbr_new_info}	get ipbr resource info	${ipbr_id}				
	Check the result and failed info	${leg_info}	${expect_result}	${error_code}			
	Check reserve BW	${ipbr_orig_info.res_bw}	${ipbr_new_info.res_bw}	${expect_bw}			
	run keyword if	'${leg_info.result}' == 'SUCCESSFUL'	Check the reserve BW and release leg when success	${leg_info}	${ipbr_new_info}	${expect_bw}	
	[Teardown]						
							
Check the reserve BW and release leg when success	[Arguments]	${leg_info}	${ipbr_new_info}	${expect_bw}			
	Release Iu-PS leg and check BW	${leg_info}	${ipbr_new_info}	${expect_bw}			
							
Create test Iu-PS leg	[Arguments]	${ipbr_id}	${leg_para}				
	${leg_info}	Create GTP Leg Direct	${ACTIVE_USCP}	${ipbr_id}	${leg_para}		
	set test variable	\${CALL_ID}	${leg_info.call_id}				
	Set To Object	${leg_info}	computer	${ACTIVE_USCP}			
	run keyword if	'${leg_info.result}' == 'SUCCESSFUL'	append to list	${OUT_LEG_LIST}	${leg_info}		
	[Return]	${leg_info}					
							
Release Iu-PS leg and check BW	[Arguments]	${leg_info}	${ipbr_new_info}	${excpet_bw}			
	${result}	release GTP leg	${ACTIVE_USCP}	${leg_info.call_id}			
	should contain	${result}	SUCCESSFUL				
	remove from list	${OUT_LEG_LIST}	-1				
	${ipbr_new_info_1}	get ipbr resource info	${ipbr_new_info.ipbr_id}				
	check reserve BW	${ipbr_new_info.res_bw}	${ipbr_new_info_1.res_bw}	${excpet_bw}			
							
Check the result and failed info	[Arguments]	${leg_info}	${expect_result}	${error_code}			
	should be equal	${leg_info.result}	${expect_result}				
	run keyword if	'${leg_info.result}' == 'FAILED'	should be equal	${leg_info.error_code}	${error_code}		
